[
  {
    "id": 1,
    "question": "What is React.js and why should I use it?",
    "answer": "React.js is a powerful JavaScript library for building user interfaces. It allows developers to create large web applications that can update and render efficiently in response to data changes, making it an excellent choice for building fast, dynamic, and scalable applications."
  },
  {
    "id": 2,
    "question": "How does the Virtual DOM in React work?",
    "answer": "The Virtual DOM is a lightweight copy of the real DOM in React. When a component's state changes, React compares the new virtual DOM with the previous one, calculates the difference, and updates only the necessary parts of the real DOM, improving performance."
  },
  {
    "id": 3,
    "question": "What are components in React?",
    "answer": "Components are the building blocks of a React application. They allow you to split the UI into independent, reusable pieces, and think about each piece in isolation. Components can be functional or class-based, making code modular and easier to manage."
  },
  {
    "id": 4,
    "question": "How do you manage state in React?",
    "answer": "State in React is managed using the useState hook in functional components or the setState method in class components. State allows you to store and manage dynamic data in a component, re-rendering the UI whenever the state changes."
  },
  {
    "id": 5,
    "question": "What is JSX in React?",
    "answer": "JSX is a syntax extension that looks similar to HTML, but itâ€™s actually used in React to describe the UI. JSX allows you to write HTML-like code within JavaScript, making the structure of components more readable and intuitive."
  }
]
